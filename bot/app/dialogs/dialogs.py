import asyncio
import logging

from aiogram import Router
from aiogram.dispatcher.event.bases import UNHANDLED
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram_dialog import Dialog, DialogManager, StartMode
from aiogram_dialog.api.exceptions import UnknownIntent
from aiohttp import ClientConnectorError

from app.dialogs.states import MenuSG
from app.dialogs.windows.camp.camp import CampChoiceWin, CampDerailedWin
from app.dialogs.windows.info.info import InfoMainWin
from app.dialogs.windows.menu.menu import MenuMainWin

dlg_router = Router()


@dlg_router.message(CommandStart())
async def handle_start_query(message: Message, dialog_manager: DialogManager):
    await message.answer('''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –æ—Å—Ç—Ä–æ–≤ –ö–∏–ª—å–ø–æ–ª–∞! –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–π –≤ —Å–µ—Ä–¥—Ü–µ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∫–∞ "–õ–∞–¥–æ–∂—Å–∫–∏–µ —à—Ö–µ—Ä—ã" –Ω–∞ –æ–∑–µ—Ä–µ –õ–∞–¥–æ–≥–∞, —ç—Ç–æ—Ç –æ—Å—Ç—Ä–æ–≤ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –ø—Ä–∏—Ä–æ–¥–Ω–æ–≥–æ –≤–µ–ª–∏—á–∏—è –∏ –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–∏—è. 
	–û—Å—Ç—Ä–æ–≤ –ö–∏–ª—å–ø–æ–ª–∞ —Å–ª–∞–≤–∏—Ç—Å—è —Å–≤–æ–µ–π –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–π –∫—Ä–∞—Å–æ—Ç–æ–π –ø—Ä–∏—Ä–æ–¥—ã. –ó–¥–µ—Å—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ—Ä–∞–∂–µ–Ω—ã –º–æ—â—å—é –∏ –≤–µ–ª–∏—á–∏–µ–º –ª–∞–¥–æ–∂—Å–∫–∏—Ö —Å–∫–∞–ª, –∫–æ—Ç–æ—Ä—ã–µ —É–∫—Ä–∞—à–∞—é—Ç –ø–µ–π–∑–∞–∂ –æ—Å—Ç—Ä–æ–≤–∞. –ì—É—Å—Ç—ã–µ –ª–µ—Å–∞, –∑–∞–ª–∏—Ç—ã–µ —Å–æ–ª–Ω–µ—á–Ω—ã–º —Å–≤–µ—Ç–æ–º, —Å–æ–∑–¥–∞—é—Ç —É—é—Ç–Ω–æ–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ, –ø—Ä–∏–≥–ª–∞—à–∞—è –≤–∞—Å –Ω–∞ –ø—Ä–æ–≥—É–ª–∫–∏ –∏ –ø–µ—à–∏–µ —ç–∫—Å–∫—É—Ä—Å–∏–∏.
	''')
    await message.answer('''–û—Å—Ç—Ä–æ–≤ –ö–∏–ª—å–ø–æ–ª–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –±–æ–≥–∞—Ç—ã–π –≤—ã–±–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –¥–ª—è –≤—Å–µ—Ö –ª—é–±–∏—Ç–µ–ª–µ–π –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π. –í—ã –º–æ–∂–µ—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –ø–µ—à–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã, –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –∫–µ–º–ø–∏–Ω–≥–∞–º–∏ –∏–ª–∏ –ø–æ–∫–∞—Ç–∞—Ç—å—Å—è –Ω–∞ –∫–∞—è–∫–∞—Ö –ø–æ –æ–∫—Ä—É–∂–∞—é—â–∏–º –æ—Å—Ç—Ä–æ–≤—É –≤–æ–¥–∞–º. –î–ª—è —Ç–µ—Ö, –∫—Ç–æ –∏—â–µ—Ç —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ –∏ —É–º–∏—Ä–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ, –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è, –Ω–∞—Å–ª–∞–∂–¥–∞—è—Å—å –ø–ª—è–∂–∞–º–∏, —É—Å—Ç—Ä–∞–∏–≤–∞—è –ø–∏–∫–Ω–∏–∫–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–±–ª—é–¥–∞—è –∑–∞ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–º–∏ –∑–∞–∫–∞—Ç–∞–º–∏.
	–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–∏–µ –æ—Å—Ç—Ä–æ–≤–∞ –ö–∏–ª—å–ø–æ–ª–∞ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏–º–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –ø—Ä–∏—Ä–æ–¥–Ω—ã–º–∏ –ø–∞–º—è—Ç–Ω–∏–∫–∞–º–∏. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å –º—É–∑–µ–π –ö–∏–ª—å–ø–æ–ª—ã, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –∫—É–ª—å—Ç—É—Ä–µ –∏ —Ç—Ä–∞–¥–∏—Ü–∏—è—Ö —ç—Ç–æ–≥–æ –º–µ—Å—Ç–∞.
	–°–∏—Ç—É—Å.—Ü–µ–Ω—Ç—Ä –æ—Å—Ç—Ä–æ–≤–∞ –ö–∏–ª—å–ø–æ–ª–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞—à–µ–π –ø–æ–µ–∑–¥–∫–∏. –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∫–∞—Ä—Ç—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö, —Ä–∞–∑–º–µ—â–µ–Ω–∏–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö –æ –ø–∏—Ç–∞–Ω–∏–∏. –ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –≤–æ–ø–ª–æ—Ç–∏—Ç—å –≤–∞—à–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –æ—Å—Ç—Ä–æ–≤–µ –ö–∏–ª—å–ø–æ–ª–∞ –≤ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–π –æ–ø—ã—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Å—Ç–∞–≤–∏—Ç –≥–ª—É–±–æ–∫–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ.
''')
    await starting_dispatcher(message, dialog_manager)


@dlg_router.message(Command("update"))
async def handle_update_query(message: Message, dialog_manager: DialogManager):
    await starting_dispatcher(message, dialog_manager)


async def starting_dispatcher(message: Message, dialog_manager: DialogManager):
    await dialog_manager.start(MenuSG.main, mode=StartMode.RESET_STACK)


@dlg_router.message(Command("start"))
async def handle_ping(message: Message):
    await message.reply("pongüü¢")


async def error_handler(event, dialog_manager: DialogManager):
    logging.error(event.exception)
    if isinstance(event.exception, UnknownIntent):
        # Handling an error related to an outdated callback
        await handle_update_query(event.update.callback_query, dialog_manager)
    elif isinstance(event.exception, ClientConnectorError):
        await event.update.callback_query.answer("–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", show_alert=True)
    else:
        return UNHANDLED


MenuDLG = Dialog(MenuMainWin)
InfoDLG = Dialog(InfoMainWin)
CampDLG = Dialog(CampChoiceWin, CampDerailedWin)
